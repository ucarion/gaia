#!/bin/bash

bold=$(tput bold)
normal=$(tput sgr0)

log() {
    echo "${bold}${1}${normal}"
}

mkdir -p assets/generated/tiles

if [ ! -f assets/generated/world_elevation.bin ]; then
    log "Generating complete world elevation for later tiles ..."

    # Resize and concatenate NOAA GLOBE data
    convert -monitor -depth 16 \
        \( -monitor -size 10800x4800 \
            gray:assets/noaa_globe/a10g \
            gray:assets/noaa_globe/b10g \
            gray:assets/noaa_globe/c10g \
            gray:assets/noaa_globe/d10g \
            -evaluate addmodulus 500 -resize 1024 +append \
        \) \
        \( -monitor -size 10800x6000 \
            gray:assets/noaa_globe/e10g \
            gray:assets/noaa_globe/f10g \
            gray:assets/noaa_globe/g10g \
            gray:assets/noaa_globe/h10g \
            -evaluate addmodulus 500 -resize 1024 +append \
        \) \
        \( -monitor -size 10800x6000 \
            gray:assets/noaa_globe/i10g \
            gray:assets/noaa_globe/j10g \
            gray:assets/noaa_globe/k10g \
            gray:assets/noaa_globe/l10g \
            -evaluate addmodulus 500 -resize 1024 +append \
        \) \
        \( -monitor -size 10800x4800 \
            gray:assets/noaa_globe/m10g \
            gray:assets/noaa_globe/n10g \
            gray:assets/noaa_globe/o10g \
            gray:assets/noaa_globe/p10g \
            -evaluate addmodulus 500 -resize 1024 +append \
        \) \
        -append \
        -resize 4096x2048 \
        gray:assets/generated/world_elevation.bin

    # Append first column to the right of last column. All tiles have an
    # additional (redundant, in that it appears in other tiles) row and column
    # below and to the right, so including this redundant column makes later
    # cropping simpler.
    convert -monitor \
        -depth 16 -size 4096x2048 gray:assets/generated/world_elevation.bin \
        -write mpr:world +delete \
        \( mpr:world \) \
        \( mpr:world -crop 1x2048+0+0 \) \
        +append \
        gray:assets/generated/world_elevation.bin
fi

resize_blue_marble_image() {
    convert -monitor \
        "assets/nasa_blue_marble/world.topo.bathy.200412.3x21600x21600.${1}.jpg" \
        -resize 10240 \
        "assets/generated/resized_blue_marble/${1}.jpg"
}

if [ ! -d assets/generated/resized_blue_marble ]; then
    mkdir assets/generated/resized_blue_marble

    log "Resizing NASA Blue Marble tiles for later use ..."
    resize_blue_marble_image "A1"
    resize_blue_marble_image "A2"
    resize_blue_marble_image "B1"
    resize_blue_marble_image "B2"
    resize_blue_marble_image "C1"
    resize_blue_marble_image "C2"
    resize_blue_marble_image "D1"
    resize_blue_marble_image "D2"
fi

generate_tile_texture() {
    local right=$(echo $1 | tr 'ABCD' 'BCDA')
    local below=$(echo $1 | tr '1' '2')
    local below_right=$(echo $1 | tr '1ABCD' '2BCDA')

    if [[ $1 =~ .1 ]]; then
        # tile is on the top row, so use `right`, `below` and `below_right`
        convert \
            \( \
                -monitor \
                \( "assets/generated/resized_blue_marble/${1}.jpg" \) \
                \( "assets/generated/resized_blue_marble/${right}.jpg" -crop 10x10240+0+0 \) \
                +append \
            \) \
            \( \
                -monitor \
                \( "assets/generated/resized_blue_marble/${below}.jpg" -crop 10240x10+0+0 \) \
                \( "assets/generated/resized_blue_marble/${below_right}.jpg" -crop 10x10+0+0 \) \
                +append \
            \) \
            -append \
            "assets/generated/tiles/${1}/0.jpg"
    else
        # tile is on the bottom row, so use only `right`
        convert -monitor \
            \( "assets/generated/resized_blue_marble/${1}.jpg" \) \
            \( "assets/generated/resized_blue_marble/${right}.jpg" -crop 10x10240+0+0 \) \
            +append \
            "assets/generated/tiles/${1}/0.jpg"
    fi
}

generate_tile_mipmaps() {
    convert -monitor "assets/generated/tiles/${1}/0.jpg" \
        \( +clone -resize 50% -write "assets/generated/tiles/${1}/1.jpg" +delete \) \
        \( +clone -resize 25% -write "assets/generated/tiles/${1}/2.jpg" +delete \) \
        -resize 12.5% "assets/generated/tiles/${1}/3.jpg"
}

generate_tile_elevation() {
    convert -monitor \
        -depth 16 -size 4097x2048 gray:assets/generated/world_elevation.bin \
        -crop $2 \
        "gray:assets/generated/tiles/${1}/elevation.bin"
}

generate_tile_assets() {
    if [ ! -d assets/generated/tiles/$1 ]; then
        mkdir assets/generated/tiles/$1

        log "Generating assets for $1"
        generate_tile_texture "$1"
        generate_tile_mipmaps "$1"
        generate_tile_elevation "$1" $2
    fi
}

generate_tile_assets "A1" "1025x1025+0+0"
generate_tile_assets "A2" "1025x1024+0+1024"
generate_tile_assets "B1" "1025x1025+1024+0"
generate_tile_assets "B2" "1025x1024+1024+1024"
generate_tile_assets "C1" "1025x1025+2048+0"
generate_tile_assets "C2" "1025x1024+2048+1024"
generate_tile_assets "D1" "1025x1025+3072+0"
generate_tile_assets "D2" "1025x1025+3072+1024"
